{"version":3,"file":"static/webpack/static/development/pages/contact.js.a72e75e48fc0362c1759.hot-update.js","sources":["webpack:///./components/Form.jsx"],"sourcesContent":["import React from \"react\";\r\nimport fetch from \"isomorphic-fetch\";\r\nrequire(\"es6-promise\").polyfill();\r\n\r\nclass FormLabel extends React.Component {\r\n  render() {\r\n    return <label htmlFor={this.props.htmlFor}>{this.props.title}</label>;\r\n  }\r\n}\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n      isActive: true\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = e => {\r\n    let newState = {};\r\n\r\n    newState[e.target.name] = e.target.value;\r\n\r\n    this.setState(newState);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const toggleNav = () => {\r\n      this.setState(prevState => ({\r\n        isActive: !prevState.isActive\r\n      }));\r\n      setTimeout(() => {\r\n        this.setState(prevState => ({\r\n          isActive: !prevState.isActive\r\n        }));\r\n      }, 2000);\r\n    };\r\n\r\n    let formData = {\r\n      first_name: this.state.first_name,\r\n      last_name: this.state.last_name,\r\n      email: this.state.email,\r\n      message: this.state.message\r\n    };\r\n\r\n    if (\r\n      formData.first_name.length < 1 ||\r\n      formData.email.length < 1 ||\r\n      formData.last_name.length < 1 ||\r\n      formData.message.length < 1\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    let body = new FormData();\r\n\r\n    body.append(\"first_name\", formData.first_name);\r\n    body.append(\"last_name\", formData.last_name);\r\n    body.append(\"email\", formData.email);\r\n    body.append(\"message\", formData.message);\r\n\r\n    fetch(\"https://hulea.org/contact-form.php\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      body: body\r\n    })\r\n      .then(function(response) {\r\n        toggleNav();\r\n        if (response.status !== 200) {\r\n          // dispatch(setError(response.status + '===>' + response.statusText + '===>' + response.url))\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(function(json) {\r\n        // if (confirm('Thank you for your message. Can I erase the form?')) {\r\n        // }\r\n        ///dispatch(setData(json, q))\r\n      })\r\n      .catch(function(err) {\r\n        alert(\"There was some problem with sending your message.\");\r\n        console.log(err);\r\n      });\r\n\r\n    this.setState({\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n      isActive: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <h1>Contact</h1>\r\n        <form className=\"react-form\" onSubmit={this.handleSubmit}>\r\n          <h3 className={this.state.isActive ? \"hide\" : \"\"}>Thanks!</h3>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <FormLabel htmlFor=\"first_name\" title=\"First Name:\" />\r\n\r\n            <input\r\n              id=\"first_name\"\r\n              className=\"form-input\"\r\n              name=\"first_name\"\r\n              type=\"text\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={this.state.first_name}\r\n            />\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <FormLabel htmlFor=\"last_name\" title=\"Last Name:\" />\r\n\r\n            <input\r\n              id=\"last_name\"\r\n              className=\"form-input\"\r\n              name=\"last_name\"\r\n              type=\"text\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={this.state.last_name}\r\n            />\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <FormLabel htmlFor=\"email\" title=\"Email:\" />\r\n\r\n            <input\r\n              id=\"email\"\r\n              className=\"form-input\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={this.state.email}\r\n            />\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <FormLabel htmlFor=\"message\" title=\"Message:\" />\r\n\r\n            <textarea\r\n              id=\"message\"\r\n              className=\"form-textarea\"\r\n              name=\"message\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={this.state.message}\r\n            />\r\n          </fieldset>\r\n\r\n          <fieldset className=\"form-group\">\r\n            <input\r\n              id=\"formButton\"\r\n              className=\"button\"\r\n              type=\"submit\"\r\n              placeholder=\"Send message\"\r\n            />\r\n          </fieldset>\r\n          <style jsx>{`\r\n            .react-form {\r\n              margin-bottom: 0 40px;\r\n            }\r\n          `}</style>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AACA;;;;AAHA;AACA;AAKA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAgBA;AAEA;AACA;AACA;AACA;AACA;AAtBA;AAwBA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAvFA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAZA;AAaA;AACA;;;AA6EA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAWA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAWA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAWA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AANA;AAAA;AAUA;AAAA;AAEA;AAEA;AACA;AAJA;AAAA;AA3DA;AAAA;AA0EA;;;;AA1KA;AACA;AA4KA;;;;A","sourceRoot":""}