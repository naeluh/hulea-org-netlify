{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport { graphql } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Router } from \"next/router\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport Head from \"next/head\";\nconst POSTS_PER_PAGE = 10;\n\nfunction handleClick(event, id, url) {\n  event.preventDefault();\n  Router.push({\n    pathname: `/work/${url}`,\n    asPath: `/work/${url}`\n  });\n}\n\nfunction PostList({\n  data: {\n    loading,\n    error,\n    webs\n  },\n  title,\n  extraClass\n}) {\n  if (error) return React.createElement(ErrorMessage, {\n    message: \"Error loading posts.\"\n  });\n\n  if (webs && webs.length) {\n    return React.createElement(\"section\", {\n      className: \"jsx-2187059968\" + \" \" + (extraClass || \"\")\n    }, React.createElement(Head, null, title === undefined ? React.createElement(React.Fragment, null, React.createElement(\"title\", {\n      className: \"jsx-2187059968\"\n    }, \"Work\"), React.createElement(\"meta\", {\n      name: \"title\",\n      content: \"Nick Hulea's Work and Projects\",\n      className: \"jsx-2187059968\"\n    }), React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"Nick Hulea's Work and Projects\",\n      className: \"jsx-2187059968\"\n    })) : \"\"), title === undefined ? React.createElement(\"h1\", {\n      className: \"jsx-2187059968\"\n    }, \"Work\") : \"\", React.createElement(\"ul\", {\n      className: \"jsx-2187059968\"\n    }, webs.map((post, index) => post.URL !== title ? React.createElement(\"li\", {\n      key: index + 1,\n      className: \"jsx-2187059968\"\n    }, React.createElement(\"a\", {\n      props: post._id,\n      href: `/work/${post.Data.Link}`,\n      className: \"jsx-2187059968\"\n    }, post.Image !== null\n    /* && title === undefined */\n    ? React.createElement(\"span\", {\n      style: {\n        backgroundImage: `url(https://strapi.hulea.org/${post.Image.url})`\n      },\n      className: \"jsx-2187059968\" + \" \" + `imgHero ${extraClass}__image`\n    }) : \"\", title === undefined ? React.createElement(\"h2\", {\n      className: \"jsx-2187059968\"\n    }, post.Title) : React.createElement(\"p\", {\n      className: \"jsx-2187059968\"\n    }, post.Title))) : \"\")), React.createElement(_JSXStyle, {\n      id: \"2187059968\"\n    }, \"*.jsx-2187059968{box-sizing:border-box;}a.jsx-2187059968{position:relative;display:block;}ul.jsx-2187059968{margin:0;padding:0;list-style:none;}li.jsx-2187059968{margin-bottom:2em;}h2.jsx-2187059968{position:absolute;bottom:5px;left:25px;padding:20px 30px;color:#fff;background-color:#111;}p.jsx-2187059968{position:absolute;background-color:#111;color:#fff;padding:4px 8px;left:0;text-align:center;-webkit-letter-spacing:-2px;-moz-letter-spacing:-2px;-ms-letter-spacing:-2px;letter-spacing:-2px;font-weight:700;top:0;}@media only screen and (max-width:480px){h2.jsx-2187059968{font-size:24px;padding:10px 15px;width:100%;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L25ldGxpZnktc2l0ZS9jb21wb25lbnRzL1Bvc3RMaXN0LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRW9CLEFBR21DLEFBR0osQUFJVCxBQUtTLEFBR0EsQUFRQSxBQVlELFNBM0JQLE1BNEJVLEdBaENOLEFBU2hCLEFBR2EsQUFRVyxDQWZOLEdBUmxCLE9BZ0JZLEdBWlosQ0FnQ2UsRUEzQmYsSUFRb0IsQ0FPUCxJQWFYLE9BWmdCLE1BUEwsVUFRSixDQVBlLE1BUUosZ0JBUHBCLEVBUXNCLGlHQUNKLGdCQUNWLE1BQ1IiLCJmaWxlIjoiL3Zhci93d3cvbmV0bGlmeS1zaXRlL2NvbXBvbmVudHMvUG9zdExpc3QuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3JhcGhxbCB9IGZyb20gXCJyZWFjdC1hcG9sbG9cIjtcbmltcG9ydCBncWwgZnJvbSBcImdyYXBocWwtdGFnXCI7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcbmltcG9ydCBFcnJvck1lc3NhZ2UgZnJvbSBcIi4vRXJyb3JNZXNzYWdlXCI7XG5pbXBvcnQgSGVhZCBmcm9tIFwibmV4dC9oZWFkXCI7XG5cbmNvbnN0IFBPU1RTX1BFUl9QQUdFID0gMTA7XG5cbmZ1bmN0aW9uIGhhbmRsZUNsaWNrKGV2ZW50LCBpZCwgdXJsKSB7XG4gIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIFJvdXRlci5wdXNoKHtcbiAgICBwYXRobmFtZTogYC93b3JrLyR7dXJsfWAsXG4gICAgYXNQYXRoOiBgL3dvcmsvJHt1cmx9YFxuICB9KTtcbn1cblxuZnVuY3Rpb24gUG9zdExpc3QoeyBkYXRhOiB7IGxvYWRpbmcsIGVycm9yLCB3ZWJzIH0sIHRpdGxlLCBleHRyYUNsYXNzIH0pIHtcbiAgaWYgKGVycm9yKSByZXR1cm4gPEVycm9yTWVzc2FnZSBtZXNzYWdlPVwiRXJyb3IgbG9hZGluZyBwb3N0cy5cIiAvPjtcbiAgaWYgKHdlYnMgJiYgd2Vicy5sZW5ndGgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtleHRyYUNsYXNzfT5cbiAgICAgICAgPEhlYWQ+XG4gICAgICAgICAge3RpdGxlID09PSB1bmRlZmluZWQgPyAoXG4gICAgICAgICAgICA8PlxuICAgICAgICAgICAgICA8dGl0bGU+V29yazwvdGl0bGU+XG4gICAgICAgICAgICAgIDxtZXRhIG5hbWU9XCJ0aXRsZVwiIGNvbnRlbnQ9XCJOaWNrIEh1bGVhJ3MgV29yayBhbmQgUHJvamVjdHNcIiAvPlxuICAgICAgICAgICAgICA8bWV0YVxuICAgICAgICAgICAgICAgIG5hbWU9XCJkZXNjcmlwdGlvblwiXG4gICAgICAgICAgICAgICAgY29udGVudD1cIk5pY2sgSHVsZWEncyBXb3JrIGFuZCBQcm9qZWN0c1wiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8Lz5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICApfVxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIHt0aXRsZSA9PT0gdW5kZWZpbmVkID8gPGgxPldvcms8L2gxPiA6IFwiXCJ9XG4gICAgICAgIDx1bD5cbiAgICAgICAgICB7d2Vicy5tYXAoKHBvc3QsIGluZGV4KSA9PlxuICAgICAgICAgICAgcG9zdC5VUkwgIT09IHRpdGxlID8gKFxuICAgICAgICAgICAgICA8bGkga2V5PXtpbmRleCArIDF9PlxuICAgICAgICAgICAgICAgIDxhIHByb3BzPXtwb3N0Ll9pZH0gaHJlZj17YC93b3JrLyR7cG9zdC5EYXRhLkxpbmt9YH0+XG4gICAgICAgICAgICAgICAgICB7cG9zdC5JbWFnZSAhPT0gbnVsbCAvKiAmJiB0aXRsZSA9PT0gdW5kZWZpbmVkICovID8gKFxuICAgICAgICAgICAgICAgICAgICA8c3BhblxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YGltZ0hlcm8gJHtleHRyYUNsYXNzfV9faW1hZ2VgfVxuICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoaHR0cHM6Ly9zdHJhcGkuaHVsZWEub3JnLyR7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHBvc3QuSW1hZ2UudXJsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pYFxuICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICAgIFwiXCJcbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIHt0aXRsZSA9PT0gdW5kZWZpbmVkID8gKFxuICAgICAgICAgICAgICAgICAgICA8aDI+e3Bvc3QuVGl0bGV9PC9oMj5cbiAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgPHA+e3Bvc3QuVGl0bGV9PC9wPlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgXCJcIlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgKX1cbiAgICAgICAgPC91bD5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICoge1xuICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgICB9XG4gICAgICAgICAgYSB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICB9XG4gICAgICAgICAgdWwge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaDIge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYm90dG9tOiA1cHg7XG4gICAgICAgICAgICBsZWZ0OiAyNXB4O1xuICAgICAgICAgICAgcGFkZGluZzogMjBweCAzMHB4O1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExO1xuICAgICAgICAgIH1cbiAgICAgICAgICBwIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxMTE7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIHBhZGRpbmc6IDRweCA4cHg7XG4gICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6IC0ycHg7XG4gICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgIH1cbiAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgICAgICAgICBoMiB7XG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgcGFkZGluZzogMTBweCAxNXB4O1xuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9zZWN0aW9uPlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIDxkaXY+TG9hZGluZzwvZGl2Pjtcbn1cblxuZXhwb3J0IGNvbnN0IGFsbFBvc3RzID0gZ3FsYFxuICBxdWVyeSB7XG4gICAgd2VicyB7XG4gICAgICBfaWRcbiAgICAgIFRpdGxlXG4gICAgICBJbWFnZSB7XG4gICAgICAgIHVybFxuICAgICAgICBleHRcbiAgICAgICAgcHJvdmlkZXJcbiAgICAgICAgc2l6ZVxuICAgICAgfVxuICAgICAgRGVzY3JpcHRpb25cbiAgICAgIERhdGFcbiAgICAgIFVSTFxuICAgICAgY3JlYXRlZEF0XG4gICAgICB1cGRhdGVkQXRcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBhbGxQb3N0c1F1ZXJ5VmFycyA9IHtcbiAgc2tpcDogMCxcbiAgZmlyc3Q6IFBPU1RTX1BFUl9QQUdFXG59O1xuXG4vLyBUaGUgYGdyYXBocWxgIHdyYXBwZXIgZXhlY3V0ZXMgYSBHcmFwaFFMIHF1ZXJ5IGFuZCBtYWtlcyB0aGUgcmVzdWx0c1xuLy8gYXZhaWxhYmxlIG9uIHRoZSBgZGF0YWAgcHJvcCBvZiB0aGUgd3JhcHBlZCBjb21wb25lbnQgKFBvc3RMaXN0KVxuZXhwb3J0IGRlZmF1bHQgZ3JhcGhxbChhbGxQb3N0cywge1xuICBwcm9wczogKHsgZGF0YSB9KSA9PiAoe1xuICAgIGRhdGEsXG4gICAgbG9hZE1vcmVQb3N0czogKCkgPT4ge1xuICAgICAgcmV0dXJuIGRhdGEuZmV0Y2hNb3JlKHtcbiAgICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgICAgc2tpcDogZGF0YS5hbGxQb3N0cy5sZW5ndGhcbiAgICAgICAgfSxcbiAgICAgICAgdXBkYXRlUXVlcnk6IChwcmV2aW91c1Jlc3VsdCwgeyBmZXRjaE1vcmVSZXN1bHQgfSkgPT4ge1xuICAgICAgICAgIGlmICghZmV0Y2hNb3JlUmVzdWx0KSB7XG4gICAgICAgICAgICByZXR1cm4gcHJldmlvdXNSZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBwcmV2aW91c1Jlc3VsdCwge1xuICAgICAgICAgICAgLy8gQXBwZW5kIHRoZSBuZXcgcG9zdHMgcmVzdWx0cyB0byB0aGUgb2xkIG9uZVxuICAgICAgICAgICAgYWxsUG9zdHM6IFsuLi5wcmV2aW91c1Jlc3VsdC5hbGxQb3N0cywgLi4uZmV0Y2hNb3JlUmVzdWx0LmFsbFBvc3RzXVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pXG59KShQb3N0TGlzdCk7XG4iXX0= */\\n/*@ sourceURL=/var/www/netlify-site/components/PostList.jsx */\"));\n  }\n\n  return React.createElement(\"div\", null, \"Loading\");\n}\n\nexport const allPosts = gql`\n  query {\n    webs {\n      _id\n      Title\n      Image {\n        url\n        ext\n        provider\n        size\n      }\n      Description\n      Data\n      URL\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const allPostsQueryVars = {\n  skip: 0,\n  first: POSTS_PER_PAGE\n}; // The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (PostList)\n\nexport default graphql(allPosts, {\n  props: ({\n    data\n  }) => ({\n    data,\n    loadMorePosts: () => {\n      return data.fetchMore({\n        variables: {\n          skip: data.allPosts.length\n        },\n        updateQuery: (previousResult, {\n          fetchMoreResult\n        }) => {\n          if (!fetchMoreResult) {\n            return previousResult;\n          }\n\n          return _Object$assign({}, previousResult, {\n            // Append the new posts results to the old one\n            allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts]\n          });\n        }\n      });\n    }\n  })\n})(PostList);","map":{"version":3,"sources":["/var/www/netlify-site/components/PostList.jsx"],"names":["graphql","gql","Router","ErrorMessage","Head","POSTS_PER_PAGE","handleClick","event","id","url","preventDefault","push","pathname","asPath","PostList","data","loading","error","webs","title","extraClass","length","undefined","map","post","index","URL","_id","Data","Link","Image","backgroundImage","Title","allPosts","allPostsQueryVars","skip","first","props","loadMorePosts","fetchMore","variables","updateQuery","previousResult","fetchMoreResult"],"mappings":"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","sourcesContent":["import { graphql } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Router } from \"next/router\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport Head from \"next/head\";\n\nconst POSTS_PER_PAGE = 10;\n\nfunction handleClick(event, id, url) {\n  event.preventDefault();\n  Router.push({\n    pathname: `/work/${url}`,\n    asPath: `/work/${url}`\n  });\n}\n\nfunction PostList({ data: { loading, error, webs }, title, extraClass }) {\n  if (error) return <ErrorMessage message=\"Error loading posts.\" />;\n  if (webs && webs.length) {\n    return (\n      <section className={extraClass}>\n        <Head>\n          {title === undefined ? (\n            <>\n              <title>Work</title>\n              <meta name=\"title\" content=\"Nick Hulea's Work and Projects\" />\n              <meta\n                name=\"description\"\n                content=\"Nick Hulea's Work and Projects\"\n              />\n            </>\n          ) : (\n              \"\"\n            )}\n        </Head>\n        {title === undefined ? <h1>Work</h1> : \"\"}\n        <ul>\n          {webs.map((post, index) =>\n            post.URL !== title ? (\n              <li key={index + 1}>\n                <a props={post._id} href={`/work/${post.Data.Link}`}>\n                  {post.Image !== null /* && title === undefined */ ? (\n                    <span\n                      className={`imgHero ${extraClass}__image`}\n                      style={{\n                        backgroundImage: `url(https://strapi.hulea.org/${\n                          post.Image.url\n                          })`\n                      }}\n                    />\n                  ) : (\n                      \"\"\n                    )}\n                  {title === undefined ? (\n                    <h2>{post.Title}</h2>\n                  ) : (\n                      <p>{post.Title}</p>\n                    )}\n                </a>\n              </li>\n            ) : (\n                \"\"\n              )\n          )}\n        </ul>\n        <style jsx>{`\n          * {\n            box-sizing: border-box;\n          }\n          a {\n            position: relative;\n            display: block;\n          }\n          ul {\n            margin: 0;\n            padding: 0;\n            list-style: none;\n          }\n          li {\n            margin-bottom: 2em;\n          }\n          h2 {\n            position: absolute;\n            bottom: 5px;\n            left: 25px;\n            padding: 20px 30px;\n            color: #fff;\n            background-color: #111;\n          }\n          p {\n            position: absolute;\n            background-color: #111;\n            color: #fff;\n            padding: 4px 8px;\n            left: 0;\n            text-align: center;\n            letter-spacing: -2px;\n            font-weight: 700;\n            top: 0;\n          }\n          @media only screen and (max-width: 480px) {\n            h2 {\n              font-size: 24px;\n              padding: 10px 15px;\n              width: 100%;\n            }\n            p {\n            }\n          }\n        `}</style>\n      </section>\n    );\n  }\n  return <div>Loading</div>;\n}\n\nexport const allPosts = gql`\n  query {\n    webs {\n      _id\n      Title\n      Image {\n        url\n        ext\n        provider\n        size\n      }\n      Description\n      Data\n      URL\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\nexport const allPostsQueryVars = {\n  skip: 0,\n  first: POSTS_PER_PAGE\n};\n\n// The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (PostList)\nexport default graphql(allPosts, {\n  props: ({ data }) => ({\n    data,\n    loadMorePosts: () => {\n      return data.fetchMore({\n        variables: {\n          skip: data.allPosts.length\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return previousResult;\n          }\n          return Object.assign({}, previousResult, {\n            // Append the new posts results to the old one\n            allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts]\n          });\n        }\n      });\n    }\n  })\n})(PostList);\n"]},"metadata":{},"sourceType":"module"}