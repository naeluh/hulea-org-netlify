{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    webs {\\n      _id\\n      Title\\n      Image {\\n        url\\n        ext\\n        provider\\n        size\\n      }\\n      Description\\n      Data\\n      URL\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { graphql } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Router } from \"next/router\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport Head from \"next/head\";\nvar POSTS_PER_PAGE = 10;\n\nfunction handleClick(event, id, url) {\n  event.preventDefault();\n  Router.push({\n    pathname: \"/work/\".concat(url),\n    asPath: \"/work/\".concat(url)\n  });\n}\n\nfunction PostList(_ref) {\n  var _ref$data = _ref.data,\n      loading = _ref$data.loading,\n      error = _ref$data.error,\n      webs = _ref$data.webs,\n      title = _ref.title,\n      extraClass = _ref.extraClass;\n  if (error) return React.createElement(ErrorMessage, {\n    message: \"Error loading posts.\"\n  });\n\n  if (webs && webs.length) {\n    return React.createElement(\"section\", {\n      className: \"jsx-2125742860\" + \" \" + (extraClass || \"\")\n    }, React.createElement(Head, null, title === undefined ? React.createElement(React.Fragment, null, React.createElement(\"title\", {\n      className: \"jsx-2125742860\"\n    }, \"Work\"), React.createElement(\"meta\", {\n      name: \"title\",\n      content: \"Nick Hulea's Work and Projects\",\n      className: \"jsx-2125742860\"\n    }), React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"Nick Hulea's Work and Projects\",\n      className: \"jsx-2125742860\"\n    })) : \"\"), title === undefined ? React.createElement(\"h1\", {\n      className: \"jsx-2125742860\"\n    }, \"Work\") : \"\", React.createElement(\"ul\", {\n      className: \"jsx-2125742860\"\n    }, webs.map(function (post, index) {\n      return post.URL !== title ? React.createElement(\"li\", {\n        key: index + 1,\n        className: \"jsx-2125742860\"\n      }, React.createElement(\"a\", {\n        props: post._id,\n        href: \"/work/\".concat(post.Data.Link),\n        className: \"jsx-2125742860\"\n      }, post.Image !== null\n      /* && title === undefined */\n      ? React.createElement(\"span\", {\n        style: {\n          backgroundImage: \"url(https://strapi.hulea.org/\".concat(post.Image.url, \")\")\n        },\n        className: \"jsx-2125742860\" + \" \" + \"imgHero \".concat(extraClass, \"__image\")\n      }) : \"\", title === undefined ? React.createElement(\"h2\", {\n        className: \"jsx-2125742860\"\n      }, post.Title) : React.createElement(\"p\", {\n        className: \"jsx-2125742860\"\n      }, post.Title))) : \"\";\n    })), React.createElement(_JSXStyle, {\n      id: \"2125742860\"\n    }, \"*.jsx-2125742860{box-sizing:border-box;}a.jsx-2125742860{position:relative;display:block;}ul.jsx-2125742860{margin:0;padding:0;list-style:none;}li.jsx-2125742860{margin-bottom:2em;}h2.jsx-2125742860{position:absolute;bottom:5px;left:25px;padding:20px 30px;color:#fff;background-color:#111;}p.jsx-2125742860{position:absolute;background-color:#111;color:#fff;padding:4px 8px;left:0;text-align:center;-webkit-letter-spacing:-2px;-moz-letter-spacing:-2px;-ms-letter-spacing:-2px;letter-spacing:-2px;font-weight:700;top:0;}@media only screen and (max-width:480px){h2.jsx-2125742860{font-size:24px;padding:10px 15px;bottom:0;left:0;}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L25ldGxpZnktc2l0ZS9jb21wb25lbnRzL1Bvc3RMaXN0LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRW9CLEFBR21DLEFBR0osQUFJVCxBQUtTLEFBR0EsQUFRQSxBQVlELFNBM0JQLE1BNEJVLEdBaENOLEFBU2hCLEFBR2EsQUFRVyxDQWZOLEdBUmxCLE9BZ0JZLEdBWlosQ0FnQ2EsRUEzQmIsSUFRb0IsQ0FPUCxFQWFGLE9BQ1QsRUFiZ0IsTUFQTCxVQVFKLENBUGUsTUFRSixnQkFQcEIsRUFRc0IsaUdBQ0osZ0JBQ1YsTUFDUiIsImZpbGUiOiIvdmFyL3d3dy9uZXRsaWZ5LXNpdGUvY29tcG9uZW50cy9Qb3N0TGlzdC5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncmFwaHFsIH0gZnJvbSBcInJlYWN0LWFwb2xsb1wiO1xuaW1wb3J0IGdxbCBmcm9tIFwiZ3JhcGhxbC10YWdcIjtcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJuZXh0L3JvdXRlclwiO1xuaW1wb3J0IEVycm9yTWVzc2FnZSBmcm9tIFwiLi9FcnJvck1lc3NhZ2VcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcblxuY29uc3QgUE9TVFNfUEVSX1BBR0UgPSAxMDtcblxuZnVuY3Rpb24gaGFuZGxlQ2xpY2soZXZlbnQsIGlkLCB1cmwpIHtcbiAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgUm91dGVyLnB1c2goe1xuICAgIHBhdGhuYW1lOiBgL3dvcmsvJHt1cmx9YCxcbiAgICBhc1BhdGg6IGAvd29yay8ke3VybH1gXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBQb3N0TGlzdCh7IGRhdGE6IHsgbG9hZGluZywgZXJyb3IsIHdlYnMgfSwgdGl0bGUsIGV4dHJhQ2xhc3MgfSkge1xuICBpZiAoZXJyb3IpIHJldHVybiA8RXJyb3JNZXNzYWdlIG1lc3NhZ2U9XCJFcnJvciBsb2FkaW5nIHBvc3RzLlwiIC8+O1xuICBpZiAod2VicyAmJiB3ZWJzLmxlbmd0aCkge1xuICAgIHJldHVybiAoXG4gICAgICA8c2VjdGlvbiBjbGFzc05hbWU9e2V4dHJhQ2xhc3N9PlxuICAgICAgICA8SGVhZD5cbiAgICAgICAgICB7dGl0bGUgPT09IHVuZGVmaW5lZCA/IChcbiAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgIDx0aXRsZT5Xb3JrPC90aXRsZT5cbiAgICAgICAgICAgICAgPG1ldGEgbmFtZT1cInRpdGxlXCIgY29udGVudD1cIk5pY2sgSHVsZWEncyBXb3JrIGFuZCBQcm9qZWN0c1wiIC8+XG4gICAgICAgICAgICAgIDxtZXRhXG4gICAgICAgICAgICAgICAgbmFtZT1cImRlc2NyaXB0aW9uXCJcbiAgICAgICAgICAgICAgICBjb250ZW50PVwiTmljayBIdWxlYSdzIFdvcmsgYW5kIFByb2plY3RzXCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIFwiXCJcbiAgICAgICAgICAgICl9XG4gICAgICAgIDwvSGVhZD5cbiAgICAgICAge3RpdGxlID09PSB1bmRlZmluZWQgPyA8aDE+V29yazwvaDE+IDogXCJcIn1cbiAgICAgICAgPHVsPlxuICAgICAgICAgIHt3ZWJzLm1hcCgocG9zdCwgaW5kZXgpID0+XG4gICAgICAgICAgICBwb3N0LlVSTCAhPT0gdGl0bGUgPyAoXG4gICAgICAgICAgICAgIDxsaSBrZXk9e2luZGV4ICsgMX0+XG4gICAgICAgICAgICAgICAgPGEgcHJvcHM9e3Bvc3QuX2lkfSBocmVmPXtgL3dvcmsvJHtwb3N0LkRhdGEuTGlua31gfT5cbiAgICAgICAgICAgICAgICAgIHtwb3N0LkltYWdlICE9PSBudWxsIC8qICYmIHRpdGxlID09PSB1bmRlZmluZWQgKi8gPyAoXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgaW1nSGVybyAke2V4dHJhQ2xhc3N9X19pbWFnZWB9XG4gICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRJbWFnZTogYHVybChodHRwczovL3N0cmFwaS5odWxlYS5vcmcvJHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zdC5JbWFnZS51cmxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSlgXG4gICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgICAgXCJcIlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAge3RpdGxlID09PSB1bmRlZmluZWQgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxoMj57cG9zdC5UaXRsZX08L2gyPlxuICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgICA8cD57cG9zdC5UaXRsZX08L3A+XG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICApfVxuICAgICAgICA8L3VsPlxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgKiB7XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgIH1cbiAgICAgICAgICBhIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIH1cbiAgICAgICAgICB1bCB7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbGkge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xuICAgICAgICAgIH1cbiAgICAgICAgICBoMiB7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBib3R0b206IDVweDtcbiAgICAgICAgICAgIGxlZnQ6IDI1cHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAyMHB4IDMwcHg7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxMTE7XG4gICAgICAgICAgfVxuICAgICAgICAgIHAge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzExMTtcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgcGFkZGluZzogNHB4IDhweDtcbiAgICAgICAgICAgIGxlZnQ6IDA7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzogLTJweDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgfVxuICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gICAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC9zZWN0aW9uPlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIDxkaXY+TG9hZGluZzwvZGl2Pjtcbn1cblxuZXhwb3J0IGNvbnN0IGFsbFBvc3RzID0gZ3FsYFxuICBxdWVyeSB7XG4gICAgd2VicyB7XG4gICAgICBfaWRcbiAgICAgIFRpdGxlXG4gICAgICBJbWFnZSB7XG4gICAgICAgIHVybFxuICAgICAgICBleHRcbiAgICAgICAgcHJvdmlkZXJcbiAgICAgICAgc2l6ZVxuICAgICAgfVxuICAgICAgRGVzY3JpcHRpb25cbiAgICAgIERhdGFcbiAgICAgIFVSTFxuICAgICAgY3JlYXRlZEF0XG4gICAgICB1cGRhdGVkQXRcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBhbGxQb3N0c1F1ZXJ5VmFycyA9IHtcbiAgc2tpcDogMCxcbiAgZmlyc3Q6IFBPU1RTX1BFUl9QQUdFXG59O1xuXG4vLyBUaGUgYGdyYXBocWxgIHdyYXBwZXIgZXhlY3V0ZXMgYSBHcmFwaFFMIHF1ZXJ5IGFuZCBtYWtlcyB0aGUgcmVzdWx0c1xuLy8gYXZhaWxhYmxlIG9uIHRoZSBgZGF0YWAgcHJvcCBvZiB0aGUgd3JhcHBlZCBjb21wb25lbnQgKFBvc3RMaXN0KVxuZXhwb3J0IGRlZmF1bHQgZ3JhcGhxbChhbGxQb3N0cywge1xuICBwcm9wczogKHsgZGF0YSB9KSA9PiAoe1xuICAgIGRhdGEsXG4gICAgbG9hZE1vcmVQb3N0czogKCkgPT4ge1xuICAgICAgcmV0dXJuIGRhdGEuZmV0Y2hNb3JlKHtcbiAgICAgICAgdmFyaWFibGVzOiB7XG4gICAgICAgICAgc2tpcDogZGF0YS5hbGxQb3N0cy5sZW5ndGhcbiAgICAgICAgfSxcbiAgICAgICAgdXBkYXRlUXVlcnk6IChwcmV2aW91c1Jlc3VsdCwgeyBmZXRjaE1vcmVSZXN1bHQgfSkgPT4ge1xuICAgICAgICAgIGlmICghZmV0Y2hNb3JlUmVzdWx0KSB7XG4gICAgICAgICAgICByZXR1cm4gcHJldmlvdXNSZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBwcmV2aW91c1Jlc3VsdCwge1xuICAgICAgICAgICAgLy8gQXBwZW5kIHRoZSBuZXcgcG9zdHMgcmVzdWx0cyB0byB0aGUgb2xkIG9uZVxuICAgICAgICAgICAgYWxsUG9zdHM6IFsuLi5wcmV2aW91c1Jlc3VsdC5hbGxQb3N0cywgLi4uZmV0Y2hNb3JlUmVzdWx0LmFsbFBvc3RzXVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pXG59KShQb3N0TGlzdCk7XG4iXX0= */\\n/*@ sourceURL=/var/www/netlify-site/components/PostList.jsx */\"));\n  }\n\n  return React.createElement(\"div\", null, \"Loading\");\n}\n\nexport var allPosts = gql(_templateObject());\nexport var allPostsQueryVars = {\n  skip: 0,\n  first: POSTS_PER_PAGE\n}; // The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (PostList)\n\nexport default graphql(allPosts, {\n  props: function props(_ref2) {\n    var data = _ref2.data;\n    return {\n      data: data,\n      loadMorePosts: function loadMorePosts() {\n        return data.fetchMore({\n          variables: {\n            skip: data.allPosts.length\n          },\n          updateQuery: function updateQuery(previousResult, _ref3) {\n            var fetchMoreResult = _ref3.fetchMoreResult;\n\n            if (!fetchMoreResult) {\n              return previousResult;\n            }\n\n            return _Object$assign({}, previousResult, {\n              // Append the new posts results to the old one\n              allPosts: [].concat(_toConsumableArray(previousResult.allPosts), _toConsumableArray(fetchMoreResult.allPosts))\n            });\n          }\n        });\n      }\n    };\n  }\n})(PostList);","map":{"version":3,"sources":["/var/www/netlify-site/components/PostList.jsx"],"names":["graphql","gql","Router","ErrorMessage","Head","POSTS_PER_PAGE","handleClick","event","id","url","preventDefault","push","pathname","asPath","PostList","data","loading","error","webs","title","extraClass","length","undefined","map","post","index","URL","_id","Data","Link","Image","backgroundImage","Title","allPosts","allPostsQueryVars","skip","first","props","loadMorePosts","fetchMore","variables","updateQuery","previousResult","fetchMoreResult"],"mappings":"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","sourcesContent":["import { graphql } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Router } from \"next/router\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport Head from \"next/head\";\n\nconst POSTS_PER_PAGE = 10;\n\nfunction handleClick(event, id, url) {\n  event.preventDefault();\n  Router.push({\n    pathname: `/work/${url}`,\n    asPath: `/work/${url}`\n  });\n}\n\nfunction PostList({ data: { loading, error, webs }, title, extraClass }) {\n  if (error) return <ErrorMessage message=\"Error loading posts.\" />;\n  if (webs && webs.length) {\n    return (\n      <section className={extraClass}>\n        <Head>\n          {title === undefined ? (\n            <>\n              <title>Work</title>\n              <meta name=\"title\" content=\"Nick Hulea's Work and Projects\" />\n              <meta\n                name=\"description\"\n                content=\"Nick Hulea's Work and Projects\"\n              />\n            </>\n          ) : (\n              \"\"\n            )}\n        </Head>\n        {title === undefined ? <h1>Work</h1> : \"\"}\n        <ul>\n          {webs.map((post, index) =>\n            post.URL !== title ? (\n              <li key={index + 1}>\n                <a props={post._id} href={`/work/${post.Data.Link}`}>\n                  {post.Image !== null /* && title === undefined */ ? (\n                    <span\n                      className={`imgHero ${extraClass}__image`}\n                      style={{\n                        backgroundImage: `url(https://strapi.hulea.org/${\n                          post.Image.url\n                          })`\n                      }}\n                    />\n                  ) : (\n                      \"\"\n                    )}\n                  {title === undefined ? (\n                    <h2>{post.Title}</h2>\n                  ) : (\n                      <p>{post.Title}</p>\n                    )}\n                </a>\n              </li>\n            ) : (\n                \"\"\n              )\n          )}\n        </ul>\n        <style jsx>{`\n          * {\n            box-sizing: border-box;\n          }\n          a {\n            position: relative;\n            display: block;\n          }\n          ul {\n            margin: 0;\n            padding: 0;\n            list-style: none;\n          }\n          li {\n            margin-bottom: 2em;\n          }\n          h2 {\n            position: absolute;\n            bottom: 5px;\n            left: 25px;\n            padding: 20px 30px;\n            color: #fff;\n            background-color: #111;\n          }\n          p {\n            position: absolute;\n            background-color: #111;\n            color: #fff;\n            padding: 4px 8px;\n            left: 0;\n            text-align: center;\n            letter-spacing: -2px;\n            font-weight: 700;\n            top: 0;\n          }\n          @media only screen and (max-width: 480px) {\n            h2 {\n              font-size: 24px;\n              padding: 10px 15px;\n              bottom: 0;\n              left: 0;\n            }\n            p {\n            }\n          }\n        `}</style>\n      </section>\n    );\n  }\n  return <div>Loading</div>;\n}\n\nexport const allPosts = gql`\n  query {\n    webs {\n      _id\n      Title\n      Image {\n        url\n        ext\n        provider\n        size\n      }\n      Description\n      Data\n      URL\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\nexport const allPostsQueryVars = {\n  skip: 0,\n  first: POSTS_PER_PAGE\n};\n\n// The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (PostList)\nexport default graphql(allPosts, {\n  props: ({ data }) => ({\n    data,\n    loadMorePosts: () => {\n      return data.fetchMore({\n        variables: {\n          skip: data.allPosts.length\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return previousResult;\n          }\n          return Object.assign({}, previousResult, {\n            // Append the new posts results to the old one\n            allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts]\n          });\n        }\n      });\n    }\n  })\n})(PostList);\n"]},"metadata":{},"sourceType":"module"}